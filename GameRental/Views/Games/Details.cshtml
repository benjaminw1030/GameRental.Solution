@{
  Layout = "_Layout";
  int availableCount = 0;
  List<Copy> availableCopies = new List<Copy> { };
  foreach (var copy in Model.Copies)
  {
    if (!copy.Rented)
    {
      availableCount++;
      availableCopies.Add(copy);
    }
  }
}

@using GameRental.Models
@model GameRental.Models.Game

<div class="jumbotron">
  <h2>Game Details</h2>
</div>

<p>@Html.DisplayNameFor(model => model.Title): @Html.DisplayFor(model => model.Title)</p>

@if (@Model.JoinEntities.Count == 0)
{
  <p>This game is not assigned for any developers.</p>
}
else
{
  <p>Developers for this this game:</p>
  <ul>
    @foreach (var join in Model.JoinEntities)
    {
      <li>@Html.ActionLink(@join.Developer.Name, "Details", "Developers", new { id = join.Developer.DeveloperId })</li>
      @using (Html.BeginForm("DeleteDeveloper", "Games"))
      {
        @Html.Hidden("joinId", @join.DeveloperGameId)
        <input type="submit" value="Delete" class="btn btn-dark"/>
      }
    }
  </ul>
}

@if(availableCount == 0)
{
  <p>This game has no copies available.</p>
}
else
{
  if(User.Identity.IsAuthenticated)
  {
    <p>This game has @availableCount out of @Model.Copies.Count copies for rent.</p>
    @using (Html.BeginForm("Rent", "Copies"))
    {
      <input data-val="true" data-val-required="The CopyId field is required." id="CopyId" name="CopyId" type="hidden" value="@ViewBag.CopyToRent.CopyId">
      <input data-val="true" data-val-required="The GameId field is required." id="GameId" name="GameId" type="hidden" value="@ViewBag.CopyToRent.GameId">
      <input data-val="true" data-val-required="The Rented field is required." id="Rented" name="Rented" type="hidden" value="True">
      <input type="submit" value="Rent it!" class="btn btn-dark"/>
    }
  }
  else
  {
    <p>This game is available for rent. @Html.ActionLink("Log in", "Login", "Account") to rent it!</p>
  }
}


<p>@Html.ActionLink("Edit Game", "Edit", new { id = Model.GameId })</p>
<p>@Html.ActionLink("Delete Game", "Delete", new { id = Model.GameId })</p>
<p>@Html.ActionLink("Add a Developer", "AddDeveloper", new { id = Model.GameId })</p>